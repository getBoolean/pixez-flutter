name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - '**'
      - '!gh-pages'
    tags:
      - 'v*'

env:
  FLUTTER_CHANNEL: "stable"
  FLUTTER_VERSION: "3.27.1"

jobs:
  build_ios_without_signing:
    name: Build Flutter for iOS (Without Signing)
    runs-on: macos-15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install and Setup Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Check Flutter Version
        run: flutter --version

      - name: Get Packages
        run: flutter pub get

      - name: Generate Code
        run: dart run build_runner build --delete-conflicting-outputs

      # Zip into IPA from here:
      # https://gist.github.com/devhammed/617d920b7ee886591a46c22633ab0093
      - name: Build Flutter IPA
        run: |
          cd ios && pod deintegrate && pod install && cd ..
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app-release.ipa Payload
          mv app-release.ipa pixez-${{ github.ref_name }}-ios.ipa

      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: pixez-${{ github.ref_name }}-ios
          path: build/ios/iphoneos/pixez-*.ipa

      - name: Release IPA
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/ios/iphoneos/pixez-*.ipa
          allowUpdates: true
          omitBodyDuringUpdate: true

  build_android:
    name: Build Flutter for Android
    runs-on: macos-15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check Java Version
        run: |
          java --version
          which java

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Check Flutter Version
        run: flutter --version

      - name: Get Packages
        run: flutter pub get

      - name: Generate Code
        run: dart run build_runner build --delete-conflicting-outputs

      # - name: Build Android Split APK
      #   run: |
      #     flutter pub get
      #     flutter build apk --release --split-per-abi
      #     cd build/app/outputs/flutter-apk
      #     mv app-arm64-v8a-release.apk pixez-${{ github.ref_name }}-android-arm64-v8a.apk
      #     mv app-armeabi-v7a-release.apk pixez-${{ github.ref_name }}-android-armeabi-v7a.apk
      #     mv app-x86_64-release.apk pixez-${{ github.ref_name }}-android-x86_64.apk

      # - name: Upload Split APKs
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: pixez-${{ github.ref_name }}-android-split
      #     path: build/app/outputs/flutter-apk/pixez-*.apk

      # - name: Release Split APKs
      #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: build/app/outputs/flutter-apk/pixez-*.apk
      #     allowUpdates: true
      #     omitBodyDuringUpdate: true

      - name: Build Universal APK
        run: |
          flutter pub get
          flutter build apk --release
          cd build/app/outputs/flutter-apk
          mv app-release.apk pixez-${{ github.ref_name }}-android-universal.apk

      - name: Upload Universal APK
        uses: actions/upload-artifact@v3
        with:
          name: pixez-${{ github.ref_name }}-android-universal
          path: build/app/outputs/flutter-apk/pixez-${{ github.ref_name }}-android-universal.apk

      - name: Release Universal APKs
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/flutter-apk/pixez-${{ github.ref_name }}-android-universal.apk
          allowUpdates: true
          omitBodyDuringUpdate: true

      - name: Build Android App Bundle
        run: |
          flutter pub get
          flutter build appbundle --release
          cd build/app/outputs/bundle/release
          mv app-release.aab pixez-${{ github.ref_name }}-android-appbundle.aab

      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: pixez-${{ github.ref_name }}-android-appbundle
          path: build/app/outputs/bundle/release/*.aab
          
      - name: Release Android App Bundle
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/bundle/release/pixez-*.aab
          allowUpdates: true
          omitBodyDuringUpdate: true

  # build_msix:
  #   name: Build Flutter (Windows MSIX)
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3
  #     # - name: Setup SQLite environment
  #       # uses: ccorsi/setup-sqlite@v1.0.1
  #       # run: |
  #       #   $url = "https://www.sqlite.org/2023/sqlite-dll-win64-x64-3420000.zip"
  #       #   $zip = "$env:TEMP\sqlite-dll-win64-x64-3420000.zip"
  #       #   $dest = "$env:TEMP\sqlite-dll-win64-x64-3420000"
  #       #   Invoke-WebRequest -Uri $url -OutFile $zip
  #       #   Expand-Archive -Path $zip -DestinationPath $dest
  #       #   echo "SQLITE3=$dest\sqlite3.dll" >> $env:GITHUB_ENV
  #     - name: Check SQLite environment
  #       run: |
  #         echo $env:SQLITE3
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"
  #     - run: flutter clean
  #     - run: flutter pub get
  #     - run: dart run build_runner build --delete-conflicting-outputs
  #     - name: Build Windows
  #       run: flutter build windows --release
  #     - name: Package as Windows MSIX
  #       run: dart run msix:create
  #     - name: Upload msix
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: windows_msix
  #         path: build/windows/runner/Release/*.msix
